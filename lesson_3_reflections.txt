When would you want to use a remote repository rather than keeping all your work
local?

When you are working collaboratively and need to share files.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because you may want to choose when and how to make additions to your remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Cloning is making copies of repositories with all their contents, and their commit history from GitHub to the local computer. 
Forks are the equivalent of cloning, but only within GitHub. Branches are for working on things such as experimental code, or 
refactoring, or fixing bugs, without affecting the master branch with working code. A branch is a work in progress that may 
need to be added to the master branch at some point.

What is the benefit of having a copy of the last known state of the remote stored locally?

So that you can work on your files, and know what changes have been updated into the master while you are working offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would email large documents back and forth, and it would be a nightmare communication endeavour. I can't think of anything that would be easier.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you are trying out a new feature, or fixing a bug, most of the time really. Working on a separarte branch allows you to work freely without worrying about interfering with the master working branch. The benefit of working directly on master would be that it's already incorporated into the code, however, that will eventually lead to many complications when working in teams, as changes can be happening that conflict with each other, and this way everyone shares, and is aware of any changes. 
